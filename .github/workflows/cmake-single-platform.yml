name: CMake on a single platform

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake git libssl-dev zlib1g-dev libopus-dev python3

    - name: Install dpp
      run: |
        git clone https://github.com/brainboxdotcc/DPP.git
        cd DPP
        sudo cmake -B build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
        sudo cmake --build build --target install -j8
        cd ..

    - name: Install libhv
      run: |
        git clone https://github.com/ithewei/libhv.git
        cd libhv
        sudo cmake -B build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
        sudo cmake --build build --target install -j8
        cd ..

    - name: Install nlohmann::json
      run: |
        git clone https://github.com/nlohmann/json.git
        cd json
        sudo cmake -B build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DBUILD_TESTING=OFF
        sudo cmake --build build --target install -j8
        cd ..

    - name: Install Skia
      run: |
        git clone https://skia.googlesource.com/skia.git
        cd skia
        python3 tools/git-sync-deps
        if [ ! -d "build" ]; then
          mkdir build
        fi
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DSKIA_BUILD_FOR_SYSTEM=ON
        cmake --build . --target install -j8
        cd ../..

    - name: Configure CMake
      run: sudo cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      run: sudo cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} -j8

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: build-artifact
        path: ${{github.workspace}}/build/349Bot
